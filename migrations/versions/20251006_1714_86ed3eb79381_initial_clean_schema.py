"""Initial clean schema

Revision ID: 86ed3eb79381
Revises: 
Create Date: 2025-10-06 17:14:50.057274

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '86ed3eb79381'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academic_years',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('state', sa.String(length=16), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("state IN ('DRAFT','ACTIVE','CLOSED')", name=op.f('ck_academic_years_ck_academic_year_state')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_academic_years'))
    )
    with op.batch_alter_table('academic_years', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_academic_years_school_id'), ['school_id'], unique=False)
        batch_op.create_index('uq_academic_year_per_school', ['school_id', 'year'], unique=True)

    op.create_table('cbc_level',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('label', sa.String(length=64), nullable=False),
    sa.Column('group_name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cbc_level'))
    )
    with op.batch_alter_table('cbc_level', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cbc_level_label'), ['label'], unique=False)
        batch_op.create_index(batch_op.f('ix_cbc_level_school_id'), ['school_id'], unique=False)

    op.create_table('chat_conversations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('first_message', sa.Text(), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.Column('message_count', sa.Integer(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chat_conversations'))
    )
    with op.batch_alter_table('chat_conversations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_conversations_is_archived'), ['is_archived'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_conversations_last_activity'), ['last_activity'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_conversations_school_id'), ['school_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_conversations_user_id'), ['user_id'], unique=False)

    op.create_table('classes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('level', sa.String(length=64), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=False),
    sa.Column('stream', sa.String(length=16), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_classes'))
    )
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_classes_school_id'), ['school_id'], unique=False)

    op.create_table('fee_structures',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('level', sa.String(length=32), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_fee_structures')),
    sa.UniqueConstraint('school_id', 'year', 'term', 'level', 'name', name='uix_fee_structure_unique')
    )
    with op.batch_alter_table('fee_structures', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fee_structures_school_id'), ['school_id'], unique=False)
        batch_op.create_index('ix_fee_structures_school_term_year', ['school_id', 'term', 'year'], unique=False)

    op.create_table('gl_accounts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('school_id', sa.String(length=36), nullable=False),
    sa.Column('code', sa.String(length=16), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gl_accounts'))
    )
    with op.batch_alter_table('gl_accounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_gl_accounts_school_id'), ['school_id'], unique=False)

    op.create_table('guardians',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('relationship', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_guardians'))
    )
    with op.batch_alter_table('guardians', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_guardians_school_id'), ['school_id'], unique=False)

    op.create_table('journalentry',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('school_id', sa.String(length=36), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('memo', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_journalentry'))
    )
    with op.batch_alter_table('journalentry', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_journalentry_school_id'), ['school_id'], unique=False)

    op.create_table('journalline',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('school_id', sa.String(length=36), nullable=False),
    sa.Column('journal_id', sa.String(length=36), nullable=False),
    sa.Column('account_id', sa.String(length=36), nullable=False),
    sa.Column('debit', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('credit', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_journalline'))
    )
    with op.batch_alter_table('journalline', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_journalline_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_journalline_journal_id'), ['journal_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_journalline_school_id'), ['school_id'], unique=False)

    op.create_table('notification',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('school_id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('body', sa.String(length=2000), nullable=False),
    sa.Column('to_guardian_id', sa.String(length=36), nullable=True),
    sa.Column('to_user_id', sa.String(length=36), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notification'))
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_school_id'), ['school_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_to_guardian_id'), ['to_guardian_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_to_user_id'), ['to_user_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('roles_csv', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('academic_terms',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('academic_year_id', sa.UUID(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=48), nullable=False),
    sa.Column('state', sa.String(length=16), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("state IN ('PLANNED','ACTIVE','CLOSED')", name=op.f('ck_academic_terms_ck_academic_term_state')),
    sa.ForeignKeyConstraint(['academic_year_id'], ['academic_years.id'], name=op.f('fk_academic_terms_academic_year_id_academic_years'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_academic_terms'))
    )
    with op.batch_alter_table('academic_terms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_academic_terms_academic_year_id'), ['academic_year_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_academic_terms_school_id'), ['school_id'], unique=False)
        batch_op.create_index('uq_term_per_year', ['school_id', 'academic_year_id', 'term'], unique=True)

    op.create_table('chat_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('message_type', sa.Enum('USER', 'ASSISTANT', 'SYSTEM', name='messagetype'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('intent', sa.String(length=100), nullable=True),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('response_data', sa.JSON(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('rated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['chat_conversations.id'], name=op.f('fk_chat_messages_conversation_id_chat_conversations'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chat_messages'))
    )
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_messages_conversation_id'), ['conversation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_intent'), ['intent'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_rating'), ['rating'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_school_id'), ['school_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_user_id'), ['user_id'], unique=False)

    op.create_table('fee_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('fee_structure_id', sa.UUID(), nullable=False),
    sa.Column('class_id', sa.UUID(), nullable=True),
    sa.Column('item_name', sa.String(length=128), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('is_optional', sa.Boolean(), nullable=False),
    sa.Column('category', sa.String(length=24), nullable=False),
    sa.Column('billing_cycle', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("billing_cycle IN ('TERM','ANNUAL','ONE_OFF')", name=op.f('ck_fee_items_ck_fee_items_billing_cycle')),
    sa.CheckConstraint("category IN ('TUITION','COCURRICULAR','OTHER')", name=op.f('ck_fee_items_ck_fee_items_category')),
    sa.CheckConstraint('amount >= 0', name=op.f('ck_fee_items_ck_fee_items_amount_positive')),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name=op.f('fk_fee_items_class_id_classes'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['fee_structure_id'], ['fee_structures.id'], name=op.f('fk_fee_items_fee_structure_id_fee_structures'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_fee_items')),
    sa.UniqueConstraint('fee_structure_id', 'class_id', 'item_name', name='uix_fee_item_structure_class_name')
    )
    with op.batch_alter_table('fee_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fee_items_class_id'), ['class_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_fee_items_fee_structure_id'), ['fee_structure_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_fee_items_school_id'), ['school_id'], unique=False)
        batch_op.create_index('ix_fee_items_school_structure_class', ['school_id', 'fee_structure_id', 'class_id'], unique=False)

    op.create_table('password_reset_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('created_ip', sa.String(length=45), nullable=True),
    sa.Column('used_ip', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_password_reset_tokens_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_password_reset_tokens'))
    )
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_password_reset_tokens_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_password_reset_tokens_token'), ['token'], unique=True)
        batch_op.create_index(batch_op.f('ix_password_reset_tokens_used'), ['used'], unique=False)
        batch_op.create_index(batch_op.f('ix_password_reset_tokens_user_id'), ['user_id'], unique=False)

    op.create_table('schools',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('contact', sa.String(length=128), nullable=True),
    sa.Column('short_code', sa.String(length=16), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('currency', sa.String(length=8), nullable=False),
    sa.Column('academic_year_start', sa.Date(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_schools_created_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schools')),
    sa.UniqueConstraint('short_code', name=op.f('uq_schools_short_code'))
    )
    op.create_table('students',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('admission_no', sa.String(length=32), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('gender', sa.String(length=16), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('class_id', sa.UUID(), nullable=True),
    sa.Column('primary_guardian_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name=op.f('fk_students_class_id_classes')),
    sa.ForeignKeyConstraint(['primary_guardian_id'], ['guardians.id'], name=op.f('fk_students_primary_guardian_id_guardians')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_students')),
    sa.UniqueConstraint('admission_no', name=op.f('uq_students_admission_no'))
    )
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_students_school_id'), ['school_id'], unique=False)

    op.create_table('enrollments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('class_id', sa.UUID(), nullable=False),
    sa.Column('term_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('enrolled_date', sa.Date(), nullable=False),
    sa.Column('withdrawn_date', sa.Date(), nullable=True),
    sa.Column('invoice_generated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('ENROLLED','TRANSFERRED_OUT','SUSPENDED','DROPPED','GRADUATED')", name=op.f('ck_enrollments_ck_enrollment_status')),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name=op.f('fk_enrollments_class_id_classes'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_enrollments_student_id_students'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['term_id'], ['academic_terms.id'], name=op.f('fk_enrollments_term_id_academic_terms'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_enrollments'))
    )
    with op.batch_alter_table('enrollments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_enrollments_class_id'), ['class_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_enrollments_school_id'), ['school_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_enrollments_student_id'), ['student_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_enrollments_term_id'), ['term_id'], unique=False)
        batch_op.create_index('uq_enrollment_student_term', ['school_id', 'student_id', 'term_id'], unique=True)

    op.create_table('invoices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('total', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('DRAFT','ISSUED','PAID','PARTIAL','CANCELLED')", name=op.f('ck_invoices_ck_invoice_status')),
    sa.CheckConstraint('total >= 0', name=op.f('ck_invoices_ck_invoice_total_positive')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_invoices_student_id_students')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_invoices'))
    )
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_invoices_school_id'), ['school_id'], unique=False)
        batch_op.create_index('ix_invoices_school_student_term', ['school_id', 'student_id', 'term', 'year'], unique=False)

    op.create_table('mobile_device_status',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.String(length=128), nullable=False),
    sa.Column('app_version', sa.String(length=32), nullable=True),
    sa.Column('device_model', sa.String(length=128), nullable=True),
    sa.Column('android_version', sa.String(length=32), nullable=True),
    sa.Column('notification_access', sa.Boolean(), nullable=False),
    sa.Column('sms_permission', sa.Boolean(), nullable=False),
    sa.Column('listener_connected', sa.Boolean(), nullable=False),
    sa.Column('last_forward_ok', sa.Boolean(), nullable=False),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('last_sms_received_at', sa.DateTime(), nullable=True),
    sa.Column('network_status', sa.String(length=32), nullable=True),
    sa.Column('battery_optimized', sa.Boolean(), nullable=True),
    sa.Column('first_seen_at', sa.DateTime(), nullable=False),
    sa.Column('last_update_at', sa.DateTime(), nullable=False),
    sa.Column('last_heartbeat_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("device_id != ''", name=op.f('ck_mobile_device_status_ck_mobile_device_status_device_id_not_empty')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_mobile_device_status_school_id_schools')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_mobile_device_status_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mobile_device_status'))
    )
    op.create_table('school_whatsapp_settings',
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('bridge_connected', sa.Boolean(), nullable=False),
    sa.Column('connection_token', sa.String(length=128), nullable=True),
    sa.Column('qr_code', sa.String(length=10000), nullable=True),
    sa.Column('qr_generated_at', sa.DateTime(), nullable=True),
    sa.Column('last_connection_check', sa.DateTime(), nullable=True),
    sa.Column('last_successful_message', sa.DateTime(), nullable=True),
    sa.Column('bridge_url', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_school_whatsapp_settings_school_id_schools')),
    sa.PrimaryKeyConstraint('school_id', name=op.f('pk_school_whatsapp_settings'))
    )
    op.create_table('schoolmember',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("role IN ('OWNER','ADMIN','TEACHER','ACCOUNTANT','PARENT')", name=op.f('ck_schoolmember_ck_schoolmember_role')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_schoolmember_school_id_schools')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_schoolmember_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schoolmember'))
    )
    op.create_table('student_guardians',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('guardian_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['guardian_id'], ['guardians.id'], name=op.f('fk_student_guardians_guardian_id_guardians')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_student_guardians_student_id_students')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_student_guardians'))
    )
    with op.batch_alter_table('student_guardians', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_guardians_guardian_id'), ['guardian_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_guardians_school_id'), ['school_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_guardians_student_id'), ['student_id'], unique=False)

    op.create_table('enrollment_status_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('enrollment_id', sa.UUID(), nullable=False),
    sa.Column('prev_status', sa.String(length=16), nullable=True),
    sa.Column('new_status', sa.String(length=16), nullable=False),
    sa.Column('reason', sa.String(length=256), nullable=True),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("new_status IN ('ENROLLED','TRANSFERRED_OUT','SUSPENDED','DROPPED','GRADUATED')", name=op.f('ck_enrollment_status_events_ck_enrollment_event_status')),
    sa.ForeignKeyConstraint(['enrollment_id'], ['enrollments.id'], name=op.f('fk_enrollment_status_events_enrollment_id_enrollments'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_enrollment_status_events'))
    )
    with op.batch_alter_table('enrollment_status_events', schema=None) as batch_op:
        batch_op.create_index('ix_enrollment_events_enrollment', ['school_id', 'enrollment_id', 'event_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_enrollment_status_events_enrollment_id'), ['enrollment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_enrollment_status_events_school_id'), ['school_id'], unique=False)

    op.create_table('invoiceline',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('item_name', sa.String(length=128), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('amount >= 0', name=op.f('ck_invoiceline_ck_invoiceline_amount_positive')),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name=op.f('fk_invoiceline_invoice_id_invoices')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_invoiceline'))
    )
    with op.batch_alter_table('invoiceline', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_invoiceline_school_id'), ['school_id'], unique=False)
        batch_op.create_index('ix_invoiceline_school_invoice', ['school_id', 'invoice_id'], unique=False)

    op.create_table('payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('school_id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('method', sa.String(length=16), nullable=False),
    sa.Column('txn_ref', sa.String(length=64), nullable=True),
    sa.Column('posted_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("method IN ('CASH','BANK','MPESA')", name=op.f('ck_payments_ck_payment_method')),
    sa.CheckConstraint('amount > 0', name=op.f('ck_payments_ck_payment_amount_positive')),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name=op.f('fk_payments_invoice_id_invoices')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payments_school_id'), ['school_id'], unique=False)
        batch_op.create_index('ix_payments_school_invoice', ['school_id', 'invoice_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index('ix_payments_school_invoice')
        batch_op.drop_index(batch_op.f('ix_payments_school_id'))

    op.drop_table('payments')
    with op.batch_alter_table('invoiceline', schema=None) as batch_op:
        batch_op.drop_index('ix_invoiceline_school_invoice')
        batch_op.drop_index(batch_op.f('ix_invoiceline_school_id'))

    op.drop_table('invoiceline')
    with op.batch_alter_table('enrollment_status_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_enrollment_status_events_school_id'))
        batch_op.drop_index(batch_op.f('ix_enrollment_status_events_enrollment_id'))
        batch_op.drop_index('ix_enrollment_events_enrollment')

    op.drop_table('enrollment_status_events')
    with op.batch_alter_table('student_guardians', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_guardians_student_id'))
        batch_op.drop_index(batch_op.f('ix_student_guardians_school_id'))
        batch_op.drop_index(batch_op.f('ix_student_guardians_guardian_id'))

    op.drop_table('student_guardians')
    op.drop_table('schoolmember')
    op.drop_table('school_whatsapp_settings')
    op.drop_table('mobile_device_status')
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_index('ix_invoices_school_student_term')
        batch_op.drop_index(batch_op.f('ix_invoices_school_id'))

    op.drop_table('invoices')
    with op.batch_alter_table('enrollments', schema=None) as batch_op:
        batch_op.drop_index('uq_enrollment_student_term')
        batch_op.drop_index(batch_op.f('ix_enrollments_term_id'))
        batch_op.drop_index(batch_op.f('ix_enrollments_student_id'))
        batch_op.drop_index(batch_op.f('ix_enrollments_school_id'))
        batch_op.drop_index(batch_op.f('ix_enrollments_class_id'))

    op.drop_table('enrollments')
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_students_school_id'))

    op.drop_table('students')
    op.drop_table('schools')
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_password_reset_tokens_user_id'))
        batch_op.drop_index(batch_op.f('ix_password_reset_tokens_used'))
        batch_op.drop_index(batch_op.f('ix_password_reset_tokens_token'))
        batch_op.drop_index(batch_op.f('ix_password_reset_tokens_expires_at'))

    op.drop_table('password_reset_tokens')
    with op.batch_alter_table('fee_items', schema=None) as batch_op:
        batch_op.drop_index('ix_fee_items_school_structure_class')
        batch_op.drop_index(batch_op.f('ix_fee_items_school_id'))
        batch_op.drop_index(batch_op.f('ix_fee_items_fee_structure_id'))
        batch_op.drop_index(batch_op.f('ix_fee_items_class_id'))

    op.drop_table('fee_items')
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_messages_user_id'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_school_id'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_rating'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_intent'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_created_at'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_conversation_id'))

    op.drop_table('chat_messages')
    with op.batch_alter_table('academic_terms', schema=None) as batch_op:
        batch_op.drop_index('uq_term_per_year')
        batch_op.drop_index(batch_op.f('ix_academic_terms_school_id'))
        batch_op.drop_index(batch_op.f('ix_academic_terms_academic_year_id'))

    op.drop_table('academic_terms')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_to_user_id'))
        batch_op.drop_index(batch_op.f('ix_notification_to_guardian_id'))
        batch_op.drop_index(batch_op.f('ix_notification_school_id'))

    op.drop_table('notification')
    with op.batch_alter_table('journalline', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_journalline_school_id'))
        batch_op.drop_index(batch_op.f('ix_journalline_journal_id'))
        batch_op.drop_index(batch_op.f('ix_journalline_account_id'))

    op.drop_table('journalline')
    with op.batch_alter_table('journalentry', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_journalentry_school_id'))

    op.drop_table('journalentry')
    with op.batch_alter_table('guardians', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_guardians_school_id'))

    op.drop_table('guardians')
    with op.batch_alter_table('gl_accounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_gl_accounts_school_id'))

    op.drop_table('gl_accounts')
    with op.batch_alter_table('fee_structures', schema=None) as batch_op:
        batch_op.drop_index('ix_fee_structures_school_term_year')
        batch_op.drop_index(batch_op.f('ix_fee_structures_school_id'))

    op.drop_table('fee_structures')
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_classes_school_id'))

    op.drop_table('classes')
    with op.batch_alter_table('chat_conversations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_conversations_user_id'))
        batch_op.drop_index(batch_op.f('ix_chat_conversations_school_id'))
        batch_op.drop_index(batch_op.f('ix_chat_conversations_last_activity'))
        batch_op.drop_index(batch_op.f('ix_chat_conversations_is_archived'))

    op.drop_table('chat_conversations')
    with op.batch_alter_table('cbc_level', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cbc_level_school_id'))
        batch_op.drop_index(batch_op.f('ix_cbc_level_label'))

    op.drop_table('cbc_level')
    with op.batch_alter_table('academic_years', schema=None) as batch_op:
        batch_op.drop_index('uq_academic_year_per_school')
        batch_op.drop_index(batch_op.f('ix_academic_years_school_id'))

    op.drop_table('academic_years')
    # ### end Alembic commands ###
